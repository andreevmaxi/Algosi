#include <iostream>
#include <utility>
#include <algorithm>

bool cmp(std::pair<int, int> a, std::pair<int, int> b);

int main(){
  int n,m;
  std::cin >> n;
  std::cin >> m;

  int Tmp1, Tmp2;
  std::pair<int, int> dots[2*n + m];
  for(int i=0; i<n; ++i){
    std::cin >> Tmp1 >> Tmp2;
    if(Tmp1 > Tmp2){
      std::swap(Tmp1, Tmp2);
    }
    dots[i*2].first = Tmp1;
    dots[i*2].second += 1;
    dots[i*2+1].first = Tmp2;
    dots[i*2+1].second += -1;
  }
  for(int i=2*n; i<2*n+m; ++i){
    std::cin >> Tmp1;
    dots[i].first = Tmp1;
    dots[i].second = i;
  }
  sort(dots, dots+n*2+m, cmp);
  int Answer[m];

  Tmp2 = 0;
  for(int i=0; i<2*n+m; ++i){
    while(i<2*n+m && dots[i+1].first == dots[i].first){
      switch(dots[i].second){
        case(-1):{
          ++Tmp2;
        }
        break;

        case(-2):{
          --Tmp2;
        }

        default:{
          Answer[dots[i].second - 2*n] = Tmp2;
        }
        break;
      }
      ++i;
    }
    switch(dots[i].second){
      case(-1):{
        ++Tmp2;
      }
      break;

      case(-2):{
        --Tmp2;
      }

      default:{
        Answer[dots[i].second - 2*n] = Tmp2;
      }
      break;
    }
  }

  for(int i=0; i<2*n+m; ++i){
    std::cout << Answer[i] << " ";
  }
  for(int i=0; i<m; ++i){
    std::cout << Answer[i] << " ";
  }
  return 0;
}

bool cmp(std::pair<int, int> a, std::pair<int, int> b){
  if(a.first == b.first){
    switch(a.second){
      case(-1):{
        return 0;
      }
      break;

      case(1):{
        return 1;
      }
      break;
    }
    switch(b.second){
      case(-1):{
        return 1;
      }
      break;

      case(1):{
        return 0;
      }
      break;
    }
    if(a.second > b.second){
      return 1;
    }else{
      return 0;
    }
  }else{
    if(a.first > b.first){
      return 1;
    }else{
      return 0;
    }
  }
}
